name: branch-pipeline

on:
  push:
    branches:
      - main
      - release-*

jobs:
  test:
    name: Test with Coverage
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Check out code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        go mod download

    - name: Run Unit tests
      run: |
        make test

    - name: Install goveralls
      run: go install github.com/mattn/goveralls@latest

    - name: Send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: goveralls -coverprofile=coverage.txt -service=github

  build:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Check for [skip ci] in commit messages or PR title
      id: check_skip_ci
      run: |
        if [[ "${{ github.event.head_commit.message }}" =~ \[skip\ ci\] ]] || [[ "${{ github.event.pull_request.title }}" =~ \[skip\ ci\] ]]; then
          echo "CI skip detected, exiting."
          exit 0
        fi

    - name: Generate tag
      id: get_tag
      run: |
        if [ "${GITHUB_REF##*/}" = "main" ]; then
          TAG_NAME="latest"
        else
          BRANCH_NAME="${GITHUB_REF#refs/heads/}"
          VERSION="${BRANCH_NAME#release-}"
          LARGEST_TAG=$(git tag --merged $BRANCH_NAME --sort=-v:refname | grep $VERSION | head -n 1)
          TAG_NAME="${LARGEST_TAG}-${GITHUB_SHA::7}"
        fi
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Docker Setup Buildx
      id: buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64,linux/arm64

    - name: Docker Login
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: GitHub Login
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GH_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        file: ./build/Dockerfile
        context: .
        push: true
        tags: |
          ${{ vars.DOCKER_USERNAME }}/redis-operator:${{ env.TAG_NAME }}
          ghcr.io/${{ github.repository_owner }}/redis-operator:${{ env.TAG_NAME }}
        platforms: linux/amd64

    - name: Update chart
      if: github.ref == 'refs/heads/main'
      uses: mikefarah/yq@master

    - name: Commit Changes
      if: github.ref == 'refs/heads/main'
      run: |
        keys=$(yq e '.images | keys | .[]' charts/redis-operator/values.yaml)

        while IFS= read -r key; do
          repository=$(yq e ".images.$key.repository" charts/redis-operator/values.yaml)
          tag=$(yq e ".images.$key.tag" charts/redis-operator/values.yaml)
          digest=$(docker buildx imagetools inspect "$repository:$tag" --format 'd-{{.Manifest.Digest}}' | awk -F: '{print $2}')
          yq e ".images.$key.digest = \"$digest\"" -i charts/redis-operator/values.yaml
          echo "Updated $repository:$tag with digest $digest"
        done <<< "$keys"

        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        git diff charts

        # check if there are changes to commit
        if git diff charts --quiet; then
          echo "No changes to commit"
          exit 0
        fi
        git add charts
        git commit -m "Automated commit message [skip ci]"
        git push

