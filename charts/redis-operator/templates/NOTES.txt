
{{- if not .Values.issuer.name }}
1. If Issuer not specified, please run the following command to pass tls verify:

CA_BUNDLE=$(kubectl get secret redis-operator-service-cert -n {{ .Release.Namespace }} -o jsonpath='{.data.ca\.crt}')
kubectl patch validatingwebhookconfigurations vredis.middleware.alauda.io --type='json' -p="[{'op': 'replace', 'path': '/webhooks/0/clientConfig/caBundle', 'value':'${CA_BUNDLE}'},{'op': 'replace', 'path': '/webhooks/1/clientConfig/caBundle', 'value':'${CA_BUNDLE}'}]"
kubectl patch mutatingwebhookconfigurations mredis.middleware.alauda.io --type='json' -p="[{'op': 'replace', 'path': '/webhooks/0/clientConfig/caBundle', 'value':'${CA_BUNDLE}'},{'op': 'replace', 'path': '/webhooks/1/clientConfig/caBundle', 'value':'${CA_BUNDLE}'}]"

2. To deploy Redis instance, apply this template:

{{- else }}
1. To deploy Redis instance, apply this template:
{{- end }}

---
apiVersion: middleware.alauda.io/v1
kind: Redis
metadata:
  name: redis-failover
spec:
  arch: sentinel
  customConfig:
    save: 60 10000 300 100 600 1
  exporter:
    enabled: true
  passwordSecret: redis-password
  persistent:
    storageClassName: sc-topolvm
  persistentSize: 1Gi
  replicas:
    sentinel:
      master: 1
      slave: 1
  resources:
    limits:
      cpu: 300m
      memory: 300Mi
    requests:
      cpu: 300m
      memory: 300Mi
  sentinel:
    replicas: 3
  version: "6.0"
---

Wait the Redis Sentinel instance to start up for about 3 minutes.
